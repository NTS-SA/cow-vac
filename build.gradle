// Common for all projects
allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencies {
        // Prod org.hibernate.dialect.

        implementation 'net.minidev:json-smart:2.4.9'
        implementation 'org.apache.logging.log4j:log4j-core:2.12.1'
        implementation 'com.vlkan.log4j2:log4j2-logstash-layout:0.19'

        implementation 'io.github.cdimascio:java-dotenv:5.1.3'
//          implementation 'org.hibernate:hibernate-core:5.4.9.Final'
        implementation 'org.springframework:spring-orm:5.2.2.RELEASE'
        implementation 'org.apache.tomcat:tomcat-dbcp:9.0.29'
        implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
        implementation 'javax.xml.bind:jaxb-api:2.3.1'
        implementation 'org.reflections:reflections:0.9.11'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-amqp'

        implementation 'io.springfox:springfox-swagger2:2.8.0'
        implementation 'io.springfox:springfox-swagger-ui:2.8.0'

        implementation 'org.apache.tomcat:tomcat-jdbc'
        implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
        implementation 'org.postgresql:postgresql:42.6.0'

        implementation group: 'io.hypersistence', name: 'hypersistence-utils-hibernate-55', version: '3.5.0'
        implementation 'org.hibernate:hibernate-core:5.6.0.Final'
        implementation 'com.google.code.gson:gson:2.10.1'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
        //    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version:'2.9.7'


        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'


        // Test
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
        testImplementation 'org.mockito:mockito-core:2.+'
        testImplementation 'com.github.javafaker:javafaker:1.0.1'
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }
    }


    task view_paths {
        doLast { task ->
            println "$task.project.name"
            println "------------------"
            println "Main: $sourceSets.main.java.srcDirTrees"
            println "   Resources: $sourceSets.main.resources.srcDirTrees"
            println "Tests: $sourceSets.test.java.srcDirTrees"
            println "   Resources: $sourceSets.test.resources.srcDirTrees"
        }
    }
}

// All subprojects (located in src/*)
subprojects {
    group = "py.gov.sigor.${rootProject.name}"

    sourceSets {
        main {
            java { srcDirs = ['main'] }
            resources { srcDirs = ['main'] } //No le pongo la carpeta resources, por que sino no encuentra los mapping files de hibernate, al momento de crear el jar.
        }

        test {
            java { srcDirs = ['test'] }
            resources { srcDirs = ['test/resources'] }
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE'

        testImplementation rootProject.sourceSets.main.output
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.1.RELEASE'

        if (project.name != "shared") {
            implementation project(":shared")
            testImplementation project(":shared").sourceSets.test.output
        }
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true

        from('src/main/java') {
            include 'config/**/*.xml'
        }
    }
}

// Main project (located in apps/)
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE')
    }
}

sourceSets {
    main {
        java { srcDirs = ['apps/main'] }
        resources { srcDirs = ['apps/main/resources'] }
    }

    test {
        java { srcDirs = ['apps/test'] }
        resources { srcDirs = ['apps/test/resources'] }
    }
}

apply plugin: 'application'

configurations {
    jaxb
}

def versionPropertiesFile = file('version.properties')
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))

bootJar {
    baseName = versionProperties['baseName']
    version = versionProperties['version']
}

mainClassName = 'py.gov.sigor.apps.Starter'

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE')
    implementation 'org.springframework.boot:spring-boot-starter-web-services:2.1.8.RELEASE'

    implementation project(":shared")
    implementation project(":vac")




    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.8.RELEASE'
    testImplementation project(":shared").sourceSets.test.output
}






